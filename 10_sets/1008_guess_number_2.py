# Условие Август и Беатриса продолжают играть в игру, но Август начал жульничать. На каждый из вопросов Беатрисы он
# выбирает такой вариант ответа YES или NO, чтобы множество возможных задуманных чисел оставалось как можно больше.
# Например, если Август задумал число от 1 до 5, а Беатриса спросила про числа 1 и 2, то Август ответит NO,
# а если Беатриса спросит про 1, 2, 3, то Август ответит YES.
#
# Если же Бетриса в своем вопросе перечисляет ровно половину из задуманных чисел, то Август из вредности всегда
# отвечает NO. Наконец, Август при ответе учитывает все предыдущие вопросы Беатрисы и свои ответы на них,
# то есть множество возможных задуманных чисел уменьшается.
#
# Первая строка содержит наибольшее число, которое мог загадать Август. Каждая следующая строка содержит очередной
# вопрос Беатрисы: набор чисел, разделенных пробелами. Последняя строка входных данных содержит одно слово HELP.
#
# Для каждого вопроса Беатрисы выведите ответ Августа на этот вопрос. После этого выведите через пробел,
# в порядке возрастания, все числа, которые мог загадать Август после ответа на все вопросы Беатрисы.

possible_values = set([str(i) for i in range(1, int(input()) + 1)])
deleted_values = set()
next_set = set()
row = input()

while row != 'HELP':
    next_set = set(row.split())
    if len(next_set - deleted_values) < len(possible_values) // 2 + 1:
        print('NO')
        possible_values.difference_update(next_set)
        deleted_values.update(next_set)
    else:
        print('YES')
        symm_diff = possible_values.symmetric_difference(next_set)
        possible_values.intersection_update(next_set)
        deleted_values.update(symm_diff)
    row = input()

print(' '.join([str(i) for i in sorted([int(i) for i in possible_values])]))
